type pict = {float, float, float, float}[,]

fn dist(x1 : float, x2 : float, y1 : float, y2 : float) : float {
    return (sqrt( pow((x2 - x1),2.0) + pow((y2 - y1),2.0) ))
}

fn circle(radius: float, thickness: float) : pict {
    return array[y : 600, x : 800] \
    if dist(300.0, to_float(y), 400.0, to_float(x)) <= (radius + thickness/2.0) &&\
    dist(300.0, to_float(y), 400.0, to_float(x)) >= (radius - thickness/2.0)\
    then {1.0,1.0,1.0,1.0} \
    else {0.0,0.0,0.0,1.0}
}

write image circle(400., 10.) to "circle.png"
