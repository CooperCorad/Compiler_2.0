type pixel = {float, float, float, float}
type pict = pixel[,]

fn manipilate (pix : pixel) : pixel {
    return {1.0 - pix{0}, 1.0 - pix{1}, 1.0 - pix{2}, 1.0}
}

fn invert(pic[H, W] : pict) : pict {

    return array[i : H, j : W] manipilate(pic[i,j])

}


read image "sample.png" to pic
write image invert(pic) to "sample-inverted.png"
