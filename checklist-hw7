expr : array [ <variable> : <expr> , ... ] <expr>
     | sum [ <variable> : <expr> , ... ] <expr>

cmd  : read image <string> to <argument>
     | write image <expr> to <string>
     | let <lvalue> = <expr>
~     | assert <expr> , <string>
     | print <string>
     | time <cmd>

argument : <variable> [ <variable> , ... ]

lvalue : { <lvalue> , ... }


        # elif type(baseexpr) is VariableExpr and baseexpr.variable.to_string() == 'pict.':
        #     return ArrayResolvedType(TupleResolvedType([FloatResolvedType(), FloatResolvedType(), FloatResolvedType(), FloatResolvedType()]), 2)
